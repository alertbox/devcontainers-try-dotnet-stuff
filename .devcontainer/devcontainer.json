{
  "name": "dotnet",
  // See complete list https://hub.docker.com/_/microsoft-dotnet-sdk/
  // Or https://mcr.microsoft.com/v2/dotnet/sdk/tags/list
  "image": "mcr.microsoft.com/dotnet/sdk:8.0-bookworm-slim",
  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [
    // Http
    8080,
    // Https
    8081
  ],
  // Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
  "remoteUser": "root",
  // Add more features. See complete list https://github.com/devcontainers/features
  "features": {
    "ghcr.io/devcontainers/features/common-utils:2": {
      "configureZshAsDefaultShell": true
    },
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/powershell:1": {},
    "ghcr.io/dapr/cli/dapr-cli:0": {},
    "ghcr.io/devcontainers/features/docker-outside-of-docker:1": {
      "moby": false,
      "dockerDashComposeVersion": "v2"
    },
    "ghcr.io/devcontainers/features/kubectl-helm-minikube:1": {
      "minikube": "none"
    },
    "ghcr.io/devcontainers/features/node:1": {},
    "ghcr.io/azure/azure-dev/azd:0": {},
    "ghcr.io/devcontainers/features/azure-cli:1": {
      "extensions": "azure-devops, containerapp, staticwebapp"
    },
    "ghcr.io/devcontainers/features/terraform:1": {}
  },
  "containerEnv": {
    // Set ASP.NET environment settings.
    "ASPNETCORE_URLS": "https://+:5001;http://+:5000",
    "ASPNETCORE_ENVIRONMENT": "Development",
    // Set dotnet CLI environment settings.
    "DOTNET_CLI_TELEMETRY_OPTOUT": "1",
    "DOTNET_GENERATE_ASPNET_CERTIFICATE": "1",
    "DOTNET_NOLOGO": "1"
  },
  "remoteEnv": {
    "DOTNET_MULTILEVEL_LOOKUP": "0",
    "TARGET": "net8.0"
  },
  // Configure tool-specific properties.
  "customizations": {
    // Configure properties specific to VS Code.
    "vscode": {
      // Add the IDs of extensions you want installed when the container is created.
      "extensions": [
        "ms-dotnettools.csharp",
        "ms-dotnettools.csdevkit",

        "visualstudioexptteam.vscodeintellicode-insiders",
        "VisualStudioExptTeam.vscodeintellicode-completions",

        "editorconfig.editorconfig",

        "ms-vscode.azurecli",
        "ms-azuretools.azure-dev",

        "ms-azuretools.vscode-docker",
        "ms-kubernetes-tools.vscode-kubernetes-tools",
        "ms-azuretools.vscode-azurecontainerapps",
        "ms-azuretools.vscode-dapr",

        "redhat.vscode-yaml",
        "ms-azure-devops.azure-pipelines",
        // "GitHub.vscode-github-actions",

        "bierner.github-markdown-preview",
        // This ext is bundled with mssql and will be installed automatically.
        // Database projects can be handled via Azure Data Studio.
        // "ms-mssql.sql-database-projects-vscode",
        "ms-mssql.mssql",

        "humao.rest-client",

        "ms-vscode.wordcount",
        "streetsidesoftware.code-spell-checker",
        "redhat.fabric8-analytics"
      ],
      // Set *default* container specific settings.json values on container create.
      "settings": {
        "files.watcherExclude": {
          "**/bin/**": true,
          "**/obj/**": true
        },
        "files.associations": {
          "**/ci/*.yml": "azure-pipelines"
        },
        "omnisharp.enableAsyncCompletion": true,
        "omnisharp.enableImportCompletion": true,
        "omnisharp.enableRoslynAnalyzers": true,
        "omnisharp.organizeImportsOnFormat": true,
        "omnisharp.useEditorFormattingSettings": true,
        "omnisharp.enableEditorConfigSupport": true,
        // Fix for ARM-based devices.
        // Read more https://github.com/OmniSharp/omnisharp-vscode/issues/4348#issuecomment-1003867594
        "omnisharp.path": "latest",
        "omnisharp.sdkIncludePrereleases": true,
        "omnisharp.useModernNet": true,
        "razor.disabled": true,
      }
    }
  },
  // Use 'updateContentCommand' to run commands after the container is successfully created.
  "updateContentCommand": {
    "dev-certs": "dotnet dev-certs https --clean && dotnet dev-certs https -t",
    "clean": "rm -rf **/bin **/obj"
  },
  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": {
  //   "init": "dapr init",
  //   "restore": "dotnet restore --no-cache --force"
  // }
}
